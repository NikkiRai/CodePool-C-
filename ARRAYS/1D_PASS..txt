// Passing Of Arrays:

# include <iostream.h>
# include <conio.h>
# include <ctype.h>
#include <process.h>



void input(int a[],int &);
void display(int a[], int);
void sortb(int a[],int);
void sorti(int a[],int);
void sorts(int a[],int);
int searchl (int,int a[],int);
int searchb (int,int a[],int);
void insertk (int, int a[],int,int &);
void inserts (int,int a[],int &);
void deletek (int,int a[],int &);
void deletev (int,int a[],int &);
void deletes (int,int a[],int &);
void merge_simp(int a[],int);
void merge_sort(int [],int);
void merge_alt(int [],int);

void main()
{ clrscr();
char ch,ans; int op,a[30],n, num, pos;
  input(a,n);
    do { clrscr();
       display(a,n);
       cout<<"\n\nWELCOME TO THE MENU !\n\n";
       cout<<"\nYour basic operations in the array:\n";
       cout << "\n1. Insertion";
       cout << "\n2. Deletion";
       cout << "\n3. Searching";
       cout << "\n4. Sorting";
       cout << "\n5. Merging";
       cout << "\nEnter Choice (1-5) ...(Press 0 to exit)";
       cin >> op;
       clrscr();
       display(a,n);
       cout << "\n\n";
       switch (op)

{  case 0: exit(0);
   case 1 : cout << "Insertion Types:";
		  cout << "\na. Insert at Position";
		  cout << "\nb. Insert by Value (Array will be sorted)";
		  cout << "\nEnter Choice (a-b) : ";
		  cin >> ch;
		  if (tolower(ch)=='a')
		  { cout << "Enter Number to be Inserted : ";
		    cin >> num;
		    cout << "Enter Position : ";
		    cin >> pos;
		    insertk(pos,num,a,n); }
		  else if (tolower(ch)=='b')
		  { cout << "Enter Number to be Inserted : ";
		    cin >> num;
		    inserts(num,a,n); }
		    else
		    cout<<"\nWrong Choice!";
		  break;
 case 2 : cout << "Deletion Types:";
		  cout << "\na. Delete by Position";
		  cout << "\nb. Delete by Value";
		  cout << "\nc. Delete in Sorted Array (Array will be sorted)";
		  cout << "\nEnter choice (a-c) : ";
		  cin >> ch;
		  if (tolower(ch)=='a')
		  { cout << "Enter Position : ";
		    cin >> pos;
		    deletek(pos,a,n); }
		  else if (tolower(ch)=='b')
		  { cout << "Enter Number to be Deleted : ";
		    cin >> num;
		    deletev(num,a,n); }
		  else if (tolower(ch)=='c')
		  { cout << "Enter Number to be Deleted : ";
		    cin >> num;
		    deletes(num,a,n); }
		    else
		    cout<<"\nWrong choice!";
		  break;
 case 3 : cout << "Search Types:";
		  cout << "\na. Binary Search";
		  cout << "\nb. Linear Search";
		  cout << "\nEnter Choice (a-b)  : ";
		  cin >> ch;
		   cout << "Enter Number to be searched : ";
		    cin >> num;
		    if (tolower(ch)=='a')
		     pos = searchb(num,a,n);
		    else if (tolower(ch)=='b')
		     pos = searchl(num,a,n);
		    if (pos==-1)
		     cout << "Number not found!";
		    else
		     cout << "Number found at Position" << pos+1;
		  break;
 case 4 : cout<<"Sorting Types";
		  cout << "\na. Bubble Sort";
		  cout << "\nb. Selection Sort";
		  cout << "\nc. Insertion Sort";
		  cout << "\nEnter Choice (a-c) : ";
		  cin >> ch;
		  if (tolower(ch)=='a')
		   sortb(a,n);
		  else if(tolower(ch)=='b')
		   sorts(a,n);
		  else if (tolower(ch)=='c')
		   sorti(a,n);
		   else
		   cout<<"\nWrong Choice!";
		  break;
 case 5:cout<< "Merging Types";
		  cout << "\na. Simple Merge";
		  cout << "\nb. Alternate Merge";
		  cout << "\nc. Sorted Merge (Arrays will be sorted)";
		  cout << "\nEnter Choice (a-c) : ";
		  cin >> ch;
		  if (tolower(ch)=='a')
		   merge_simp(a,n);
		  else if (tolower(ch)=='b')
		   merge_alt(a,n);
		  else if (tolower(ch)=='c')
		   merge_sort(a,n);
		   else
		   cout<<"\nWrong Choice!";
		  break;
	 default : cout << "Wrong Choice Input!"; }

cout<<"\n\nDo you want to continue?(Y/N)";
cin>>ans; } while(toupper(ans)=='Y');

getch();
}

void input(int a[20],int &n)
{ cout << "Enter Size of the Array (<=30) : ";
  cin >> n;
  cout<<"\nEnter any "<<n<<" integers:";
  for (int i=0;i<=n-1;i++)
      cin >> a[i];
}

void display(int a[20],int n)
{ clrscr();
  cout << "\nThe Array is :-";
  for (int i=0;i<=n-1;i++)
   cout <<a[i] <<' ';
   cout<<'\n';
}

int searchl (int num,int a[20],int n)
{ int pos=-1,i=0;
  while (a[i]!=num && i<=n-1)
   i++;
  if ( a[i]==num)
   pos=i;
    return pos; }

int searchb (int num,int a[20],int n)
{ int pos=-1, beg, mid, end;
  sorti(a,n);
  beg=0;
  end=n-1;
  mid=(beg+end)/2;
  while (a[mid]!=num && beg<=end)
  { if (a[mid]>num)
     end=mid-1;
    else
     beg=mid+1;
    mid = (beg+end)/2; }
  if (a[mid]==num)
   pos=mid;
  return pos; }

void insertk (int pos, int num,int a[20],int &n)
{ pos--;
  for (int i=n-1;i>=pos;i--)
   a[i+1]=a[i];
  a[pos]=num;
  n++;
  display( a,n);
  cout << "Element Inserted!"; }

void inserts (int num,int a[20],int &n)
{ sorti(a,n);
  int pos = -1;
  int i=0;
  while (a[i]<num && i<=n-1)
   i++;
  pos=i;
  for (i=n-1;i>=pos;i--)
   a[i+1]=a[i];
  a[pos]=num;
  n++;
  display(a,n);
  cout << "Element Inserted!"; }

void sortb(int a[20],int n)
{ int temp;
  for (int i=0;i<=n-1;i++)
   for (int j=0;j<=n-2-i;j++)
   { if (a[j]>a[j+1])
     { temp=a[j];
       a[j]=a[j+1];
       a[j+1]=temp; }
   }
   display(a,n);
  cout << "Array Sorted!\n";
}

void sorts(int a[20],int n)
{ int temp;
  for (int i=0;i<=n-1;i++)
   for (int j=i+1;j<=n-1;j++)
   { if (a[i]>a[j])
     { temp=a[j];
       a[j]=a[i];
       a[i]=temp; }
   }
   display(a,n);
  cout << "Array Sorted!\n";
}

void sorti(int a[20],int n)
{ int temp,i,j;
  for (i=0;i<=n-1;i++)
  { temp=a[i];
    j=i-1;
    while(temp < a[j] && j>=0)
    { a[j+1]=a[j];
      j--; }
    a[j+1]=temp; }
    display(a,n);
  cout << "Array Sorted!\n";
}

void deletek(int pos,int a[20],int &n)
{ pos--;
  for (int i=pos;i<=n-2;i++)
   a[i]=a[i+1];
  n--;
  display(a,n);
  cout << "Element Deleted!";
}

void deletev(int num,int a[20],int &n)
{ int i=0;
  while (a[i]!=num && i<=n-1)
   i++;
  if (a[i]==num)
  { int k=i;
    for (i=k;i<=n-2;i++)
     a[i]=a[i+1];
    n--;
    display(a,n);
    cout << "Element Deleted!"; }
  else
   cout << "Element not found. Nothing deleted!";
}

void deletes(int num,int a[20],int &n)
{ sorti(a,n);
  int i=0;
  while (a[i]<num && i<=n-1)
   i++;
  if (a[i]==num)
  { int k=i;
    for (i=k;i<=n-2;i++)
     a[i]=a[i+1];
    n--;
    display(a,n);
    cout << "Element Deleted!"; }
  else
   cout << "Element not found. Nothing deleted!";
}

void merge_simp(int a[20],int n)
{ int b[30],c[60],m,k,i,j,x;
input(b,m);
x=m+n;
k=0;
for(i=0;i<=n-1;i++)
{ c[k]=a[i]; k++;

}
for(j=0;j<=m-1;j++)
{ c[k]=b[j]; k++;

}

display(c,x);
}

void merge_alt(int a[20],int n)
{ int b[30], c[60], m,x;
 int p,i,j,k;
input(b,m);

i=j=k=0;
while(i<=n-1 && j<=m-1)
{
c[k]=a[i];
c[k+1]=b[j];

i++;j++;k+=2;
}

if(i<=n-1)
for( p=i;p<=n-1;p++)
{
c[k]=a[p];
k++;
}

else if(j<=m-1)
for(p=j;p<=m-1;p++)
{
c[k]=b[p];
k++;
}

display(c,m+n);
}

void merge_sort(int a[20],int n)
{ int b[30], c[60];
int m,p,i,j,k,x;

sorti(a,n);

input(b,m);

i=j=k=0;
while(i<=n-1 && j<=m-1)
{ if (a[i]<b[j])
  { c[k]=a[i];
	i++; k++;
  }
 else

{ c[k]=b[j];
 j++; k++;
 }
  }

 if(i<=n-1)
for( p=i;p<=n-1;p++)
{  c[k]=a[p];
k++;
}

else
if(j<=m-1)
for(p=j;p<=m-1;p++)
{ c[k]=b[p];
k++;
}

display(c,m+n);
}

